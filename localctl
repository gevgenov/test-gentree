#!/usr/bin/env bash

set -Eeuo pipefail
trap cleanup SIGINT SIGTERM ERR EXIT

script_dir=$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd -P)

usage() {
  cat << EOF # remove the space between << and EOF, this is due to web plugin issue
Description: 
    Control local PHP application

Usage: 
    $(basename "${BASH_SOURCE[0]}") <command>

Available commands:
    install           install application
    uninstall         remove all application data from the system
    sh                start the shell

Available options:
    -h, --help        Print this help and exit
    -v, --verbose     Print script debug info
EOF
  exit
}

cleanup() {
  trap - SIGINT SIGTERM ERR EXIT
}

setup_colors() {
  if [[ -t 2 ]] && [[ -z "${NO_COLOR-}" ]] && [[ "${TERM-}" != "dumb" ]]; then
    NOFORMAT='\033[0m' RED='\033[0;31m' GREEN='\033[0;32m' ORANGE='\033[0;33m' BLUE='\033[0;34m' PURPLE='\033[0;35m' CYAN='\033[0;36m' YELLOW='\033[1;33m'
  else
    NOFORMAT='' RED='' GREEN='' ORANGE='' BLUE='' PURPLE='' CYAN='' YELLOW=''
  fi
}

msg() {
  echo >&2 -e "${1-}"
}

halt() {
  local msg=$1
  local code=${2-1} # default exit status 1
  msg "$msg"
  exit "$code"
}

parse_params() {
  while :; do
    case "${1-}" in
    -h | --help) usage ;;
    -v | --verbose) set -x ;;
    --no-color) NO_COLOR=1 ;;
    -?*) halt "Unknown option: $1" ;;
    *) break ;;
    esac
    shift
  done

  args=("$@")

  # check required arguments
  [[ ${#args[@]} -eq 0 ]] && halt "Missing script arguments"

  return 0
}

parse_params "$@"
setup_colors

# script logic here
if [ ${args[0]} = "install" ];
then
msg "${GREEN}Installing...${NOFORMAT}"

elif [ ${args[0]} = "uninstall" ];
then
msg "${GREEN}Uninstalling...${NOFORMAT}"

elif [ ${args[0]} = "sh" ];
then
msg "${GREEN}Starting the shell...${NOFORMAT}"

else
halt "Sorry, unknown command: ${args[0]}."
fi
